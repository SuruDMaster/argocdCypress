apiVersion: argoproj.io/v1alpha1
kind: job
metadata:
  name: cypress-tests
  annotations:
    workflows.argoproj.io/hook: PreSync
    workflows.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    workflows.argoproj.io/controller-instanceid: my-argo-instance
spec:
  schedule: '0 2 * * *'
  concurrencyPolicy: "Replace"
  startingDeadlineSeconds: 0
  failedJobsHistoryLimit: 4
  suspend: false
  timezone: "Europe/Paris"
  workflowSpec:
    entrypoint: clients
    templates:
    - name: clients
      dag:
        tasks:
        - name: install-dependencies
          template: install-dependencies
        - name: client
          dependencies: [install-dependencies]
          template: client
          arguments:
            parameters: [{name: client-name, value: "{{item.client-name}}" }, {name: client-path, value: "{{item.path}}" }, {name: record-key, value: "{{item.record-key}}" }]
          withItems: [
              { 'client-name': 'auth', path: '/a', 'record-key': 'a' },
              { 'client-name': 'auth2', path: '/b', 'record-key': 'b' }
          ]
    - name: client
      inputs:
        parameters:
        - name: client-name
        - name: client-path
        - name: record-key
      dag:
        tasks:
        - name: run-client-tests
          template: envs
          arguments:
            parameters:
              - name: client-name
                value: "{{inputs.parameters.client-name}}"
              - name: env
                value: "{{item.env}}"
              - name: client-path
                value: "{{inputs.parameters.client-path}}"
              - name: baseUrl
                value: "{{item.url}}"
              - name: record-key
                value: "{{inputs.parameters.record-key}}"
          withItems:
          - { env: "prod-example", url: "https://domain.com" }
          - { env: "staging-example", url: "https://domain.com" }
    - name: envs
      inputs:
        parameters:
        - name: client-name
        - name: baseUrl
        - name: client-path
        - name: env
        - name: record-key
      steps:
      - - name: fetch-version
          template: fetch-version
          arguments:
            parameters:
              - name: baseUrl
                value: "{{inputs.parameters.baseUrl}}"
              - name: client-path
                value: "{{inputs.parameters.client-path}}"
      - - name: test
          template: test
          arguments:
            parameters:
            - name: version
              value: "{{steps.fetch-version.outputs.parameters.version}}"
            - name: client-name
              value: "{{inputs.parameters.client-name}}"
            - name: baseUrl
              value: "{{inputs.parameters.baseUrl}}"
            - name: record-key
              value: "{{inputs.parameters.record-key}}"
            - name: env
              value: "{{inputs.parameters.env}}"
    - name: fetch-version
      inputs:
        parameters:
        - name: baseUrl
        - name: client-path
      container:
        image: argoproj/argoexec:latest
        command: ["/bin/sh", "-c"]
        args: ["echo 'magic script here' > /tmp/version.txt"]
        resources:
          limits:
            memory: 32Mi
            cpu: 1000m
      outputs:
        parameters:
        - name: version
          valueFrom:
            default: "1.0.0"
            path: /tmp/version.txt
    - name: install-dependencies
      inputs:
        artifacts:
        - name: node_modules
          path: /work/node_modules
          s3:
            key: "cypress/install-dependencies/node_modules"
      outputs:
        artifacts:
        - name: node_modules
          path: /node_modules
          s3:
            key: "cypress/install-dependencies/node_modules"
      container:
        image: cypress/base:12
        command: ["/bin/sh", "-c"]
        args: ['npm i cypress']
        resources:
          requests:
            memory: 2000Mi
            cpu: 1000m
          limits:
            memory: 2000Mi
            cpu: 2000m

    - name: test
      inputs:
        artifacts:
        - name: node_modules
          path: /work/node_modules
          s3:
            key: "cypress/install-dependencies/node_modules"
        - name: source
          path: /work
          git:
            repo: "git@github.com:habx/{{inputs.parameters.client-name}}"
            revision: "{{inputs.parameters.version}}"
            sshPrivateKeySecret:
              name: argo-ssh-private-key-{{inputs.parameters.client-name}}
              key: ssh-private-key
        parameters:
        - name: client-name
        - name: version
        - name: record-key
        - name: env
        - name: baseUrl
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      container:
        image: cypress/browsers:node12.6.0-chrome77
        command: ["/bin/sh", "-c"]
        args:
            - >-
                npx cypress run --project ./work --record --key
                {{inputs.parameters.record-key}} --tag
                {{inputs.parameters.version}},{{inputs.parameters.env}} --config
                baseUrl={{inputs.parameters.baseUrl}} numTestsKeptInMemory=0

        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 4Gi
            cpu: 2
